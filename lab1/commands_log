3.Определение параметров среды:

	1.Определение текущего времени:
	  date --date="today" +%T
	  Результат:09:41:46

	2.Определение имени терминала:
	  who | grep "$(whoami)" | grep -o "tty[0-9]\s"
	  Результат:tty2 

	3.Определение имён рабочей и домашней директорий:
	  Определение текущей рабочей директории:pwd
	  Результат:/home/patt/MSO_labs/lab1
	  Определение домашней директории:/home/patt

	4.Определение имён и соответствующих терминалов всех активных пользователей:
	  cat <(who -H | grep -o 'NAME\s\+LINE') <(who | grep -o '\w\+\s\+tty[0-9]\+') | awk '{print "\t  " $0}'
	  Результат:
	  NAME     LINE
	  patt     tty2

	5.Определение номеров всех доступных для Вашего наблюдения активных процессов:
	  ps | awk '{print "\t  "$0}'
	  Результат:
	      PID TTY          TIME CMD
	     7069 pts/0    00:00:01 bash
	    24168 pts/0    00:00:00 bash
	    24169 pts/0    00:00:00 ps
	    24170 pts/0    00:00:00 awk

	6.Определение параметров терминала:
	  stty | awk '{print "\t  "$0}'
	  Результат:
	  speed 38400 baud; line = 0;
	  -brkint -imaxbel iutf8

4.Создайте пустой файл (файл, не содержащий никакой информации) в Вашей директории
по имени first.snap.

	touch first.snap

5.Вариант 1.
Создайте в Вашей домашней директории файл contens.of.partent и запишите в него
имя и листинг каталога, подкаталогом которого является Ваша домашняя директория

	Создание файла
	sudo touch $HOME/contens.of.partent

	Листинг каталога:
	ls $HOME/..

6.Убедителсь в том, что Ваша директория не пуста. Создайте файл second.type,
содержащий информацию о типах (по содержимому) всех файлов Вашей директории,
включая и файл second.type;

	Выполнение данного пункта сделано с помощью bash скрипта part6.sh

7.Создайте файл second.rights, содержащий информацию о правах доступа и
владельцах файлов в Вашей директории;

	Выполнение данного пункта сделано с помощью bash скрипта part7.sh

8.Получите информацию о файле second.type, которая содержится в файловой системе;

	Запрос информации:
	stat second.rights
	Результат:
		File: second.rights
	Size: 199       	Blocks: 8          IO Block: 4096   regular file
	Device: 10305h/66309d	Inode: 3155264     Links: 1
	Access: (0644/-rw-r--r--)  Uid: (    0/    root)   Gid: (    0/    root)
	Access: 2025-09-06 17:23:54.237511140 -0400
	Modify: 2025-09-06 17:23:50.194584053 -0400
	Change: 2025-09-06 17:23:50.194584053 -0400
	Birth: 2025-09-06 17:23:50.191584107 -0400

9.Повторите пункт 3 лабораторного задания, сохраняя всю необходимую информацию в
файле first.snap и используя в качестве разделителя данных о действующих параметрах
последовательность символов типа "-------------...----" (или иных, по Вашему желанию).
Отметьте совпадения и несовпадения при выполнении команд пункта 3 и содержимого
файла first.snap;

	Данный пункт лабораторной работы выполнен с помощью скрипта part9.sh
	Ниже приведён код данного скрипта

	$(date --date="today" +%T >> first.snap)
	$(echo "===================================================" >> first.snap)
	$(who | grep "$($whoami)" | grep -o "tty[0-9]\s" >> first.snap)
	$(echo "===================================================" >> first.snap)
	$(pwd >> first.snap)
	$(echo "===================================================" >> first.snap)
	$(echo $HOME >>first.snap)
	$(echo "===================================================" >> first.snap)
	$(who -H >> first.snap)
	$(echo "===================================================" >> first.snap)
	$(ps >> first.snap)
	$(echo "===================================================" >> first.snap)
	$(stty >> first.snap)
	$(echo "===================================================" >> first.snap)

	Единственным отличием от пункта 3 является наличие разделителей при выводе.Остальный отличия могут быть обусловлены выполняемыми командами.


10.Попробуйте добиться того, чтобы вывод на Ваш терминал осуществлялся темными
символами на светлом фоне;

	echo -e "\033[30;47m Text \033[0m"
	Следует отметить,что такая стилизация работает только в рамках конкретного вызова команды echo.
	Для постоянной стилизации следует изменить настройки в файле ~/.bashrc


11.Создайте в Вашей домашней директории поддиректорию Mysecondir, скопируйте Ваш
файл second.type в директорию Mysecondir. Переместите Ваш файл first.snap в директорию
Mysecondir с переименованием его в second.snap;
	mkdir Mysecondir
	cp second.type Mysecondir/
	mv first.snap Mysecondir/second.snap

12.Установите для файла second.snap права доступа с абсолютным значением атрибута 777
	chmod 777 second.snap

13.Установите для директории права доступа внешнего пользователя такие, чтобы он мог
копировать из Вашей директории;
	chmod o+r Mysecondir/

14.Создайте из Mysecondir ссылку на файл, владельцем которого является другой
пользователь. Что Вам мешает?
		Если честно, то мне ничего не мешало, хоть из Mysecondir создавать ссылку на файл, пренадлежащий другому поользователю,хоть в обратную сторону

15.Выполните ещё раз пункт 4 задания, сохранив результат в файл second.snap. Выведете строки,
отсутствующие в second.snap, но присутствующие в файле first.snap, полученном в пункте 4
задания. Результат поместить в файл differ в Mysecondir(Оригинальное задание).
	Это задание я пока тоже не могу сделать.

16.Включите Ваш терминал для приема сообщений от других пользователей, использующих
команду write.

	mesg y

17.Зарегистрируйтесь с другого терминала и перешлите на терминал, использовавшийся в
предыдущем пункте задания, сообщение вида "Hello, I am a user from ttyxx".



18.Выберите любой из разделов команды man и перешлите его между терминалами с
припиской в конце о том, кто Вы с точки зрения ОС UNIX. Продемонстрируйте этот пункт
работы преподавателю.

19.Завершите сеанс работы с ОС.




